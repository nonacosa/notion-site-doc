[{"body":"这里维护已经使用 Notion-Site 上线的网站：\n网站 网站类型 Github 仓库地址 Notion-Site 文档 文档站 😀 仓库 nonacosa’s blog 博客站 😀 仓库 这是博客站的 notion 原数据示例：Untitled\n","link":"https://ns-doc.env.wtf/docs/example/site-example/","section":"docs","title":"Site Example"},{"body":"在这里将在使用 Notion-Site 前介绍 Notion、Hugo、Vercel 的基本使用方法用法，如果用户对这三个工具很熟悉可以跳过本文档，直接进入：\nStart Notion-Site","link":"https://ns-doc.env.wtf/docs/introduce/","section":"docs","title":"Introduce"},{"body":"近两年迅速崛起的线上 ALL IN ONE 的写作工具 Notion ，它 有相当多的成熟插件或第三方应用，我们几乎可以用 Noiton 做非常多的文字编辑、知识整理等工作。\nNotion Databse： 互联网中有非常多的 notion 教学网站，针对 Database 可以参考以下文章：\n初识数据库\n在移动端使用数据库\nNotion Database 实践\nNotion 的 Database 不是我们认知的传统意义上的 Table（表格），而是一个 数据库 ，每个 Properties 属性都是数据库的列，其中 Name 属性是无法修改的，Name 可以创建 Page（页面），也就是文章。\n所以在Notion 中，我们经常用 Database 来维护文章（Page），并扩展多个 Properties （属性）用于描述、管理这个文章的目的。 Notion properties： 基于 Database 管理的 Page 可以无限自定义各种属性（properties），用 Notion-Site 提供的属性描述文章，达到 notion \u0026gt;\u0026gt;\u0026gt; website 的目的。\n示例： 下面是生成该 Notion-Site 文档所创建的 Database 以及效果： 下面是生成个人 Blog 网站创建的 Database 以及效果: Notion 了解到这里，就已经可以使用 Notion 维护网站了。\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-notion/","section":"docs","title":"Notion"},{"body":"该页面 Notion 原文链接：Shortcodes Example\nYoutube Code 1mermaidAPI.initialize({ 2 securityLevel: \u0026#39;loose\u0026#39;, 3 theme: \u0026#39;base\u0026#39;, 4}); Mermaid gantt title A Gantt Diagram dateFormat YYYY-MM-DD section Section A task :a1, 2014-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2014-01-12 , 12d another task : 24d twitter 尝试 flutter pic.twitter.com/KMmiW52uio\n\u0026mdash; 庄文达 (@sis_nonacosa) July 6, 2022 Audio PDF Previous Next \u0026nbsp; \u0026nbsp; Page: / BookMark Web Tools #493 - The Top 30 Tools of 2022 The top 30 tools of 2022, as determined by the number of unique clicks in this newsletter over the past 12 months. https://api.daily.dev/r/dn4_W4VWu JsFiddle iframe Gist 自定义 shortcodes 主题中有很多自己实现的 shortcodes，Notion-Site 无法全部支持，当需要使用时，不妨直接写出主题中示例的原文：\n这是一个提示！ 后期 Notion-Site 会规划用户自定义 shortcodes 像配置文件一样，通过 Notion 存储，下载，覆盖。\n","link":"https://ns-doc.env.wtf/docs/example/shortcodes-example/","section":"docs","title":"Shortcodes Example"},{"body":"在这里将会为一步一步讲述如何配置、构建网站。\n","link":"https://ns-doc.env.wtf/docs/start/","section":"docs","title":"Start"},{"body":"Notion 的属性是可以完全自己定制的，但是在 Notion-Site 中，我们绑定了一些生成网站所必要的属性，这些属性是 Notion-Site 的核心功能，每个属性都用于管理生成的网站，所以，为了以后随时随地管理网站，需要先理解这些属性的意义和规则。\nNotion-Site 的属性非常重要，本页内容请一定仔细阅读。当然如果你非常了解 Hugo，浅浅的浏览一遍就好。 Name Database 中的默认字段，用作维护网站的子页面，名称作为描述字段，让网站管理人员理解这个页面的作用\nCover Database 中的隐藏字段，用作维护网站文章的封面，缩略图\nTitle 标题属性，大多数所有主题都默认支持该属性，用来维护文章或文档的标题 Status 用于管理博客的发布状态，目前有以下几种状态：\nfinished published draft 如果设置该状态是 draft，表示该文章还处于“草稿” 阶段，那么 Notion-Site 不会拉取该页面，也不会参与生成网站。\n如果设置该状态是 finished 或 published ，那么 Notion-Site 会从 Notion 服务器拉取该页面，生成目标网页\n当网站发布完毕，Notion-Site 会将 finished 状态自动修改为 published 状态，用户可以很方便的看到变化。\nCategories 分类属性，大多数博客类主题都默认支持该属性，方便查看分类的文章或浏览该分类的所有文章。 Tags 标签属性，大多数博客类主题都默认支持该属性，方便查看标签的文章或浏览该标签的所有文章。 Position 非必填，如果未填写，Notion-Site 初始化默认值为\u0026quot;content/post\u0026quot; 因为各种主题的用途不同，所以每种主题可能有自己的存放 markdown 原文的路径，用户可以根据自己的需求选择 Notion-Site 生成文件的位置,该路径是以 HomePath 为基础的相对路径 Keywords 一些模板有支持\nFileName 为生成的文件自定义文件名，默认生成的规则:{homePath} / {Position} / {Name} / index.md\n但是如果填写了 FileName 属性，将会按照{homePath} / {position} / {FileName}.md规则创建文件 Desctiption 文章的描述信息\nCreateAt 创建时间属性，大多数博客类主题都默认支持该属性，方便按照年度查看归档的文章，文章的发布时间，以及排序。\n该字段会影响生成网站中文章的发布时间，在 Notion-Site 提供的 Database 默认模板中，时间是默认不可编辑的，如果用户想自定义创建时间，例如迁移一些旧文章等，可以修改 CreateAt 的属性改为自定义，由自己调整时间。 Author 保留字段，暂时没用\nLastMod 上次修改时间属性，部分博客类主题默认支持该属性。\nExpiryDate 过期时间属性，大多数博客类主题都默认支持该属性，如果 当前时间 \u0026gt; 过期时间，该文章不可见。\nPublishDate 该文章最近一次的部署时间，为 Notion-Site 成功发布该文章的时间，由 Notion-Site 程序自动修改。\nShow_comments 是否显示评论，暂未接入评论组件，TODO\nSlug 自定义文章 URL 属性，大多数博客类主题都默认支持该属性，如果文章含有中文导致链接不美观或名称太长，可以设置该属性，将自动替换 Name 属性作为访问地址。\nType setting\ngallery\nfolder\ncompose\nsetting 表示该 Page 里面的内容为配置信息，比如 config.yaml，只会原样输出，并且不会生成任何额外的 FrontMatter 描述信息。\nfolder 表示该 Page 只是一个目录，里面包含子 Database , 一般用于文档站的维护，方便在 Notion 中体现层次，方便管理，而不是都堆在一个层级，不便于管理。\ngallery 表示该文章开启 “画廊模式”，针对三张以上连续的图片会在文章内部合并为一个 Gallery，比较适合图片类的博客。\nWeight 权重属性，大多数文档类主题都默认支持该属性，方便按照为一个目录下的文档定制排序。\n这里截个图\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-properties/","section":"docs","title":"Properties"},{"body":"在这里介绍使用 Notion-Site 转换 Notion 的效果，以及使用 Notion-Site 部署成功的案例\n","link":"https://ns-doc.env.wtf/docs/example/","section":"docs","title":"Example"},{"body":"目前常见的开源 markdown \u0026gt; html 的静态网站方案有以下几种：\nHugo Jekyll\nHexo\nVuePress\n……\n等等优秀的项目，基于社区完善程度、模板的数量、编程语言、未来的拓展性考虑，目前 Notion-Site 绑定了 Hugo。\n主题商店 目前 Hugo 官方收集的主题：https://themes.gohugo.io/\n在这个列表中的 200+ 主题都是比较成熟的。\n也可以在 Github 中搜索 hugo theme 发现一些最近有哪些还没有被官方收集到的好玩的模板。 挑选模板 Step1： 我们应该定位自己想要创建一个什么类型的网站：\n个人博客\n团队博客\n摄影画廊\n公司主页\n个人简历\n文档站\nStep2： 再去筛选哪些类型是我们的更高要求：\n响应式\n支持 Dark 模式\n轻量\n简洁\n美观\n以Stack 模板为例，进入主题，通常有两个按钮：\ndownload：直接跳转到 Github 仓库\ndemo：打开示例网站预览\n一定会有 download，demo（在线预览） 不一定全部都有，如果没有需要自己下载模板启动，直到我们选出自己想要的模板为止。\n下载模板运行示例 点击 download 页面， 跳转到 Github 仓库 , 下载仓库，每个模板都会有一个示例项目: exampleSite\n也可以直接通过 Github 提供的 CodeSpaces 预览：\n这就是模板开发者提供的模板，我们需要关注示例的内容结构，这决定了我们的 ：\nPosition 应该设置在哪里\n需要配置哪些配置文件\nFileName 的设置\n模板里好玩的 shrotsCodes 语法应该如何书写\nNotion-Site 只支持 Notion 自带的大部分功能：\n视频\n音频\n文件\n图片\n嵌入网站\ntwitter 预览\nPDF\n….\n关于内置的 shortCodes ，以及如何使用其他 shortCodes，请看后面的文档。\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-hugo/","section":"docs","title":"Hugo"},{"body":"Vercel是一个用来部署前端应用的云平台，但也可以用来构建轻量级的事件驱动API，开发者可以将自己的网络应用部署、托管在平台上运行。\n类似的产品非常多：\nGithub Page\nCloudFare worker\nNetlify\nHeroku\n等等，都可以达到相同的目的\n为什么选择 Vercel Notion-Site 默认绑定 Vercel 平台，主要是针对中国地区有提供单独的 DNS 优化，只需要购买一个廉价的域名绑定指定的中国区 DNS 即可，另外， Vercel 的轮子比较完善，可以直接使用完善的 Github Action ，省去了额外的开发工作。\n创建 Vercel 账号 我们需要先 创建一个 Vercel 账号 ，后面会用到。\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-vercel/","section":"docs","title":"Vercel"},{"body":"Notion-Site 的架构涉及中的自动化部署环境是依赖 Github Action 的能力展开的，我们可以直接在应用市场中找到 Notion-Site 程序免费使用服务，使用 Github Action 容器还可以规避中国大陆访问 Notion 接口不稳定的问题。\nGithub Action 官方文档 配置文件 如果没有特殊需求，使用 Notion-Site 默认模板默认的配置文件可以满足大部分的需求：\n计费标准 Github Action 是否收费的规则比较透明，下面是计费规则：\n关于 Github Action 的计费 如果你的仓库是公开的就免费，如果有隐私方面的顾虑，私有仓库也可以提供下面的免费额度。\n产品 存储 分钟数（每月） GitHub Free 500 MB 2,000 GitHub Pro 1GB 3,000 组织的 GitHub Free 500 MB 2,000 GitHub Team 2 GB 3,000 GitHub Enterprise Cloud 50 GB 50,000 即使你不是 Github 的付费用户，每天也有近一个小时的容器使用时间（这里默认指的是 Ubuntu 容器） 每次部署的时间 每次部署的时间与文章的数量，文章内媒体资源的大小正相关，可以在 action 页面的历史看到每次部署花费了多少服务器时间：\n当然如果是 public 仓库就不用担心时间的问题。\n个性化配置 模板中默认使用的配置是每天部署一次，这意味着每天 Notion-Site 会基于 Github 提供的服务器拉取在 Notion 中维护的所有文章自动进行部署。\n具体调整配置可以参考 Github Action 文档，比如如果想调整为：\n每小时一次：\n可以直接调整 cron 属性的值，调整自动部署的方式和频率，参考下列文章：\nCrontab.guru - The cron schedule expression editor An easy to use editor for crontab schedules. https://crontab.guru/ Quickstart for GitHub Actions - GitHub Docs Try out the features of GitHub Actions in 5 minutes or less. https://docs.github.com/en/actions/quickstart ","link":"https://ns-doc.env.wtf/docs/introduce/introduce-github-action/","section":"docs","title":"Github Action"},{"body":"创建 Integration 先为当前 Notion 账号设置 Secret\nNotion – The all-in-one workspace for your notes, tasks, wikis, and databases. A new tool that blends your everyday work apps into one. It\u0026#39;s the all-in-one workspace for you and your team https://www.notion.so/my-integrations 然后勾选 Internal integration, 并勾选三个权限：\nread\nupdate\ninsert （可选）\nread 权限是为了读取 Page 信息，update 权限是为了自动更新 Page 属性，insert 权限可以为了以后 Notion-Site 的新功能做准备。 添加 Integration 保存 Token 进入刚刚创建的 Notion Integration，拿到 token，该 token 的生效范围是该账号的 workspace，不同的 workspace 需要不同的 Integration\n复制模板 博客类 Notion 模板：BLOG\n文档类 Notion 模板：Notiton Site Doc\n选择类型后，点击复制，选择复制到自己的 workspace 即可。\n","link":"https://ns-doc.env.wtf/docs/start/setting-notion/","section":"docs","title":"Setting Notion"},{"body":"我们可以在 Github 商店 中找到 Notion-Site ， 就可以在 Github 中随意使用了，代码如下：\n1- name: notion-site 2 uses: pkwenda/notion-site@v1.0.3 为了节省时间，Notion-Site 已经创建好了一套默认流程，可以直接使用：\nnotion-site-doc/builder.yml at main · pkwenda/notion-site-doc This is a document generated entirely based on notion-site - notion-site-doc/builder.yml at main · pkwenda/notion-site-doc https://github.com/pkwenda/notion-site-doc/blob/main/.github/workflows/builder.yml 直接在该库中直接点击： use the template 创建自己的仓库即可：\n新建仓库：\n然后为了隐式存储我们的 Token ，防止其他用户看到 Token ，需要在该仓库创建环境变量：\n然后我们可以手动点击 Build 部署，或者等待默认的的自动部署，具体看之前介绍的 cron 配置，当然，可以随意设置自己仓库的自动部署频率，私有库注意前文介绍的费用问题。\n可以看到 花费 90 秒左右顺利部署完成，服务器费用由微软提供。\n注意： notion-site-doc 仓库绑定的默认主题是： Compose 文档类主题，如果想使用其他主题，请参阅：更换主题 创建 ubuntu 容器\n设置每天执行一次\n拉取本仓库代码（并递归下载 sub model 主题）\n拉取 notion-site 最新版本\n清空上次拉取的 Page\n从 Notion 拉取最新的 Page\n提交保存最新的 Page \u0026gt;\u0026gt; markdown 原文，提交到本仓库做为备份\n使用 Hugo 进行编译，将生成的网站提交到 gh-pages 分支\n以上所有的配置用户可以根据自己的需求自行调整，参考 Github Action 文档：\nGitHub Actions Documentation - GitHub Docs Automate, customize, and execute your software development workflows right in your repository with GitHub Actions. You can discover, create, and share actions to perform any job you\u0026#39;d like, including CI/CD, and combine actions in a completely customized workflow. https://docs.github.com/en/actions 至此，我们已经拥有了一个每天不断从 Notion 更新的静态网站仓库，我们可以在手机、平板、电脑等任何设备和平台对网站进行编辑和管理。 下一步只需要考虑部署到服务器即可， Notion-Site 默认提供 Vercel 部署方案。\n至于其他发布平台或部署到自己服务器的 Nginx ，需要根据自己的情况定制化调整配置文件， Github Action 已经有很多成熟的组件：\nSFTP\nFTP\nAWS\n等等通用的 Upload 方式，只需要根据自己的实际情况调整即可。\n","link":"https://ns-doc.env.wtf/docs/start/use-github-action/","section":"docs","title":"How to use Github Action"},{"body":"Notion 的属性是可以完全自己定制的，但是在 Notion-Site 中，我们绑定了一些生成网站所必要的属性，这些属性是 Notion-Site 的核心功能，每个属性都用于管理生成的网站，所以，为了以后随时随地管理网站，需要先理解这些属性的意义和规则。\nNotion-Site 的属性非常重要，本页内容请一定仔细阅读。当然如果你非常了解 Hugo，浅浅的浏览一遍就好。 Name Database 中的默认字段，用作维护网站的子页面，名称作为描述字段，让网站管理人员理解这个页面的作用，通常 Title 属性作为文章实际的标题，但是如果未填写 Title 属性，则使用 Name 属性作为文章的标题。\nCover Database 中的隐藏字段，用作维护网站文章的封面，表示首页的缩略图：\nTitle 标题属性，大多数所有主题都默认支持该属性，用来维护文章或文档的标题 Status 用于管理博客的发布状态，目前有以下几种状态：\nfinished published draft 如果设置该状态是 draft，表示该文章还处于“草稿” 阶段，那么 Notion-Site 不会拉取该页面，也不会参与生成网站。\n如果设置该状态是 finished 或 published ，那么 Notion-Site 会从 Notion 服务器拉取该页面，生成目标网页\n当网站发布完毕，Notion-Site 会将 finished 状态自动修改为 published 状态，用户可以很方便的看到变化。\nCategories 分类属性，大多数博客类主题都默认支持该属性，方便查看分类的文章或浏览该分类的所有文章。 Tags 标签属性，大多数博客类主题都默认支持该属性，方便查看标签的文章或浏览该标签的所有文章。 Position 非必填，如果未填写，Notion-Site 初始化默认值为\u0026quot;content/post\u0026quot; 因为各种主题的用途不同，所以每种主题可能有自己的存放 markdown 原文的路径，用户可以根据自己的需求选择 Notion-Site 生成文件的位置,该路径是以 HomePath 为基础的相对路径 Keywords 一些模板有支持\nFileName 为生成的文件自定义文件名，默认生成的规则:{homePath} / {Position} / {Name} / index.md\n但是如果填写了 FileName 属性，将会按照{homePath} / {position} / {FileName}.md规则创建文件 Desctiption 文章的描述信息\nCreateAt 创建时间属性，大多数博客类主题都默认支持该属性，方便按照年度查看归档的文章，文章的发布时间，以及排序。\n该字段会影响生成网站中文章的发布时间，在 Notion-Site 提供的 Database 默认模板中，时间是默认不可编辑的，如果用户想自定义创建时间，例如迁移一些旧文章等，可以修改 CreateAt 的属性改为自定义，由自己调整时间。 Author 保留字段，暂时没用\nLastMod 上次修改时间属性，部分博客类主题默认支持该属性。\nExpiryDate 过期时间属性，大多数博客类主题都默认支持该属性，如果 当前时间 \u0026gt; 过期时间，该文章不可见。\nPublishDate 该文章最近一次的部署时间，为 Notion-Site 成功发布该文章的时间，由 Notion-Site 程序自动修改。\nShow_comments 是否显示评论，暂未接入评论组件，TODO\nSlug 自定义文章 URL 属性，大多数博客类主题都默认支持该属性，如果文章含有中文导致链接不美观或名称太长，可以设置该属性，将自动替换 Name 属性作为访问地址。\nType setting\ngallery\nfolder\ncompose\nsetting 表示该 Page 里面的内容为配置信息，比如 config.yaml，只会原样输出，并且不会生成任何额外的 FrontMatter 描述信息。\nfolder 表示该 Page 只是一个目录，里面包含子 Database , 一般用于文档站的维护，方便在 Notion 中体现层次，方便管理，通常我们只需要设置 folder 的页面 status 属性为 draf，那么整个目录都不会被 Notion-Site 下载参与构建网站。\ngallery 表示该文章开启 “画廊模式”，针对三张以上连续的图片会在文章内部合并为一个 Gallery，比较适合图片类的博客。\nWeight 权重属性，大多数文档类主题都默认支持该属性，方便按照为一个目录下的文档定制排序。\n","link":"https://ns-doc.env.wtf/docs/start/setting-properties/","section":"docs","title":"Setting Properties"},{"body":"首先，需要创建一个 Vercel 账号，然后添加新项目\n授权 Github ， 选择之前基于 Notion-Site-Doc 创建的新仓库，点击 Import\n创建后修改分支 main 为 gh-pages :\n如果有自己的域名，绑定到中国区的 Host 并设置子域名即可\n在 Github Action 手动重新运行一下（第一次构建默认是 main 分支，修改为 gh-pages 分支后需要再触发一下 Vercel 的 Hook）\n完成 如果不更换主题，以后都不需要再配置了。\n","link":"https://ns-doc.env.wtf/docs/start/publish-vercel/","section":"docs","title":"Publish by Vercel"},{"body":"在实际生成网站之前，我们也可以在本地进行 debug 测试，测试生成的网站是否正确，缩短配置时间。\n下载或安装 Notion-Site 离线程序 1： 在 release 下载页 选择当前操作系统最新的 release 二进制包。\n2： 基于 Unix 平台 可以在线安装：\n1curl -sSf https://raw.githubusercontent.com/pkwenda/notion-site/master/install.sh | sh 生成配置文件： 在 windows 中：\n1notion-site.exe init 在 Unix 系统中：\n1notion-site init 生成如下文件：\nnotion-site.yaml\n1notion: 2 databaseId: YOUR-NOTION-DATABASE-ID 3markdown: 4 homePath: \u0026#34;\u0026#34; 我们需要更改：\nhomePath: 为执行命令时 hugo 目录的相对路径\ndatabaseId 换为 复制模板后自己 workspace 页面的 page id：\n.env\n1NOTION_SECRET=xxxx Notion_SECRET 填写之前我们创建的 Integration 的 Token ，用 .env 文件来代替前文 Githun Action 的 secret 环境变量配置。\n下载 Hugo 模板 这里有两点需要注意：\n1：所有的主题放在 themes，通常 示例 都是使用 Git Submodules 同步的主题仓库，但不强制。\n2：注意配置文件的主题配置👇\nnotion-site-doc/config.toml at main · pkwenda/notion-site-doc This is a document generated entirely based on notion-site - notion-site-doc/config.toml at main · pkwenda/notion-site-doc https://github.com/pkwenda/notion-site-doc/blob/main/config.toml#L7 不管使用那种主题，都需要添加并使用 notion-site-shortcodes 模板作为基础模板，该模板提供了 notion 中的非 markdown 类型的 shortcodes 转换。如不添加此模板，notion 中很多类型无法同步：\nyoutube\ntwitter\ngist\n….\nDebug 1./notion-site 2 3Load .env file 4Using config file: D:\\code\\nonacosa\\golang\\notion_awesome\\notion-site\\notion-site.yaml 5✔ Querying Notion database: Completed 6-- Article [1/5] -- https://www.notion.so/Setting-ab95db6fcd37450ca19c17e0c3fa99d9 7✔ Getting blocks tree: Completed 8✔ Generating blog post: Completed 9-- Article [2/5] -- https://www.notion.so/Doc-Home-3dab2163acdb415aaf6514b3c00368c5 10✔ Getting blocks tree: Completed 11Processing the 0 th *notion.ParagraphBlock tpye block -\u0026gt; 84ec2a40-bb04-443a-8e1e-1e66379be280 12... 13Processing the 22 th *notion.BulletedListItemBlock tpye block -\u0026gt; 16478784-72cc-4f4e-8362-8344235ead44 14Processing the 23 th *notion.ParagraphBlock tpye block -\u0026gt; 44780147-3a79-411f-8f75-b6a667af1d12 15✔ Generating blog post: Completed 注意：如果 notion 中含有 twitter 或 bookmark 等指向被 GFW 屏蔽的网址，本地调试时需要开启代理。 然后安装运行 Hugo，查看本地效果即可：\n1hugo server -D 打开http://localhost:1313查看效果\n","link":"https://ns-doc.env.wtf/docs/start/debug-local/","section":"docs","title":"How to debug local"},{"body":" 让你的 Notion 与网页联动起来 Notion Site 是基于 Notion 和 Hugo 深度绑定的一款定制化网站的开源软件，您可以在 Hugo 模板商店的数百个模板中找到喜欢的模板作为您的博客或文档站。\n通过 Vercel 与 Github Action 的能力，只需要一次配置，随时随地使用任何设备进行编辑。 如果您是开发者，欢迎提供宝贵的 PR 或 ISSUE 。 本网站完全基于该 Notion 原数据构建,每 1 个小时自动更新部署一次: Notiton Site Doc\nRead the Docs\n","link":"https://ns-doc.env.wtf/","section":"","title":"Notion-Site"},{"body":"Notion-Site 是一个打通 Notion 与 Hugo 的自动建站工具，它比 Notion 默认提供的 Share 功能更适用于构建网站，我们可以使用 Hugo 提供的 200 多种类型的主题创建我们的网站。\n基于 Notion-Site ，就像使用 IFTTT 一样，只需要一次配置之后，无需服务器资源就可以在任何设备的 Notion 中以维护文章的方式来管理、构建网站。\nNotion 清晰的目录结构\nNotion 对网页的转义\nNotion 对网站配置文件的云储存\nNotion 本身做为博客的不足： Notion 因为自带分享链接，所以近几年我们通常直接分享 Notion 的地址作为我们的博客、文档站，或者使用类似 Notion-Blog 等开源方案做 1:1 的转换。\n也可以在 Cloudflare Web Worker 提供的能力绑定域名、CDN 提速等等：\n🌐 Using the Notion page as a personal website with your domain on Cloudflare Introduction Hi, DEV people! 🙂 Today, I give you a handy step-by-step guide to help you... https://dev.to/koddr/using-the-notion-page-as-a-personal-website-with-your-domain-on-cloudflare-1pi7 在希望实现上面的需求的同时，保留 Notion 的便利性，与 Hugo 的垂直性，开发了 Notion-Site：\n产品 RSS 速度 备份 部署 移动端 Notion ❌ ❌ ✔ ✔ ✔ Hugo ✔ ✔ ❌ ❌ ❌ Notion-Site ✔ ✔ ✔ ✔ ✔ 我们要做的只是在 Notion 中编辑文章即可。 只需要一次配置实现 ：\n备份： Notion 、 Github Repository 自动化 ： Github Action 网站部署： Vercel Notion-Site 构建流程 graph TD A[Notion DataBase] --\u003e|Notion-Site| B(Get Pages) B --\u003e C{Process Pages To Hugo} C --\u003e|setting| D[Hugo Setting Files] C --\u003e|Article| E[Hugo Content Files] E --\u003e|Folder| G[Folder] E --\u003e|Article| H[Markdown files] E --\u003e|Media| I[Downlaod Meida files] graph TD Hugo --\u003e|CI| J[GitHub ACtion] --\u003e Vercel --\u003e DPD[Complete the deployment] ","link":"https://ns-doc.env.wtf/docs/","section":"docs","title":"Notion Site Doc"}]