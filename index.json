[{"body":"近两年迅速崛起的线上 ALL IN ONE 的写作工具 Notion ，它 有相当多的成熟插件或第三方应用，我们几乎可以用 Noiton 做非常多的文字编辑、知识整理等工作。\nNotion Databse： 互联网中有非常多的 notion 教学网站，针对 Database 可以参考以下文章：\n初识数据库\n在移动端使用数据库\nNotion Database 实践\nNotion 的 Database 不是我们认知的传统意义上的 Table（表格），而是一个 数据库 ，每个 Properties 属性都是数据库的列，其中 Name 属性是无法修改的，Name 可以创建 Page（页面），也就是文章。\n所以在Notion 中，我们经常用 Database 来维护文章（Page），并扩展多个 Properties （属性）用于描述、管理这个文章的目的。 Notion properties： 基于 Database 管理的 Page 可以无限自定义各种属性（properties），用 Notion-Site 提供的属性描述文章，达到 notion \u0026gt;\u0026gt;\u0026gt; website 的目的。\n示例： 下面是生成该 Notion-Site 文档所创建的 Database 以及效果： 下面是生成个人 Blog 网站创建的 Database 以及效果: Notion 了解到这里，就已经可以使用 Notion 维护网站了。\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-notion/","section":"docs","title":"Notion"},{"body":"在这里将会为您介绍 Notion-Site 的基本属性和内置 shortCodes 转义\n画个流程图\n","link":"https://ns-doc.env.wtf/docs/introduce/","section":"docs","title":"Introduce"},{"body":"在这里将会为您介绍 Notion-Site 的配置步骤，基本属性和内置 shortCodes 转义\n画个流程图\n","link":"https://ns-doc.env.wtf/docs/start/","section":"docs","title":"Start"},{"body":"Notion 的属性是可以完全自己定制的，但是在 Notion-Site 中，我们绑定了一些生成网站所必要的属性，这些属性是 Notion-Site 的核心功能，每个属性都用于管理生成的网站，所以，为了以后随时随地管理网站，需要先理解这些属性的意义和规则。\nNotion-Site 的属性非常重要，本页内容请一定仔细阅读。当然如果你非常了解 Hugo，浅浅的浏览一遍就好。 Name Database 中的默认字段，用作维护网站的子页面，名称作为描述字段，让网站管理人员理解这个页面的作用\nCover Database 中的隐藏字段，用作维护网站文章的封面，缩略图\nTitle 标题属性，大多数所有主题都默认支持该属性，用来维护文章或文档的标题 Status 用于管理博客的发布状态，目前有以下几种状态：\nfinished published draft 如果设置该状态是 draft，表示该文章还处于“草稿” 阶段，那么 Notion-Site 不会拉取该页面，也不会参与生成网站。\n如果设置该状态是 finished 或 published ，那么 Notion-Site 会从 Notion 服务器拉取该页面，生成目标网页\n当网站发布完毕，Notion-Site 会将 finished 状态自动修改为 published 状态，用户可以很方便的看到变化。\nCategories 分类属性，大多数博客类主题都默认支持该属性，方便查看分类的文章或浏览该分类的所有文章。 Tags 标签属性，大多数博客类主题都默认支持该属性，方便查看标签的文章或浏览该标签的所有文章。 Position 非必填，如果未填写，Notion-Site 初始化默认值为\u0026quot;content/post\u0026quot; 因为各种主题的用途不同，所以每种主题可能有自己的存放 markdown 原文的路径，用户可以根据自己的需求选择 Notion-Site 生成文件的位置,该路径是以 HomePath 为基础的相对路径 Keywords 一些模板有支持\nFileName 为生成的文件自定义文件名，默认生成的规则:{homePath} / {Position} / {Name} / index.md\n但是如果填写了 FileName 属性，将会按照{homePath} / {position} / {FileName}.md规则创建文件 Desctiption 文章的描述信息\nCreateAt 创建时间属性，大多数博客类主题都默认支持该属性，方便按照年度查看归档的文章，文章的发布时间，以及排序。\n该字段会影响生成网站中文章的发布时间，在 Notion-Site 提供的 Database 默认模板中，时间是默认不可编辑的，如果用户想自定义创建时间，例如迁移一些旧文章等，可以修改 CreateAt 的属性改为自定义，由自己调整时间。 Author 保留字段，暂时没用\nLastMod 上次修改时间属性，部分博客类主题默认支持该属性。\nExpiryDate 过期时间属性，大多数博客类主题都默认支持该属性，如果 当前时间 \u0026gt; 过期时间，该文章不可见。\nPublishDate 该文章最近一次的部署时间，为 Notion-Site 成功发布该文章的时间，由 Notion-Site 程序自动修改。\nShow_comments 是否显示评论，暂未接入评论组件，TODO\nSlug 自定义文章 URL 属性，大多数博客类主题都默认支持该属性，如果文章含有中文导致链接不美观或名称太长，可以设置该属性，将自动替换 Name 属性作为访问地址。\nType setting\ngallery\nfolder\ncompose\nsetting 表示该 Page 里面的内容为配置信息，比如 config.yaml，只会原样输出，并且不会生成任何额外的 FrontMatter 描述信息。\nfolder 表示该 Page 只是一个目录，里面包含子 Database , 一般用于文档站的维护，方便在 Notion 中体现层次，方便管理，而不是都堆在一个层级，不便于管理。\ngallery 表示该文章开启 “画廊模式”，针对三张以上连续的图片会在文章内部合并为一个 Gallery，比较适合图片类的博客。\nWeight 权重属性，大多数文档类主题都默认支持该属性，方便按照为一个目录下的文档定制排序。\n这里截个图\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-properties/","section":"docs","title":"Properties"},{"body":"目前常见的开源 markdown \u0026gt; html 的静态网站方案有以下几种：\nHugo Jekyll\nHexo\nVuePress\n……\n等等优秀的项目，基于社区完善程度、模板的数量、编程语言、未来的拓展性考虑，目前 Notion-Site 绑定了 Hugo。\n主题商店 目前 Hugo 官方收集的主题：https://themes.gohugo.io/\n在这个列表中的 200+ 主题都是比较成熟的。\n也可以在 Github 中搜索 hugo theme 发现一些最近有哪些还没有被官方收集到的好玩的模板。 挑选模板 Step1： 我们应该定位自己想要创建一个什么类型的网站：\n个人博客\n团队博客\n摄影画廊\n公司主页\n个人简历\n文档站\nStep2： 再去筛选哪些类型是我们的更高要求：\n响应式\n支持 Dark 模式\n轻量\n简洁\n美观\n以Stack 模板为例，进入主题，通常有两个按钮：\ndownload：直接跳转到 Github 仓库\ndemo：打开示例网站预览\n一定会有 download，demo（在线预览） 不一定全部都有，如果没有需要自己下载模板启动，直到我们选出自己想要的模板为止。\n下载模板运行示例 点击 download 页面， 跳转到 Github 仓库 , 下载仓库，每个模板都会有一个示例项目: exampleSite\n也可以直接通过 Github 提供的 CodeSpaces 预览：\n这就是模板开发者提供的模板，我们需要关注示例的内容结构，这决定了我们的 ：\nPosition 应该设置在哪里\n需要配置哪些配置文件\nFileName 的设置\n模板里好玩的 shrotsCodes 语法应该如何书写\nNotion-Site 只支持 Notion 自带的大部分功能：\n视频\n音频\n文件\n图片\n嵌入网站\ntwitter 预览\nPDF\n….\n关于内置的 shortCodes ，以及如何使用其他 shortCodes，请看后面的文档。\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-hugo/","section":"docs","title":"Hugo"},{"body":"Vercel是一个用来部署前端应用的云平台，但也可以用来构建轻量级的事件驱动API，开发者可以将自己的网络应用部署、托管在平台上运行。\n类似的产品非常多：\nGithub Page\nCloudFare worker\nNetlify\nHeroku\n等等，都可以达到相同的目的\n为什么选择 Vercel Notion-Site 默认绑定 Vercel 平台，主要是针对中国地区有提供单独的 DNS 优化，只需要购买一个廉价的域名绑定指定的中国区 DNS 即可，另外， Vercel 的轮子比较完善，可以直接使用完善的 Github Action ，省去了额外的开发工作。\n创建 Vercel 账号 我们需要先 创建一个 Vercel 账号 ，后面会用到。\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-vercel/","section":"docs","title":"Vercel"},{"body":"Notion-Site 的架构涉及中的自动化部署环境是依赖 Github Action 的能力展开的，我们可以直接在应用市场中找到 Notion-Site 程序免费使用服务，使用 Github Action 容器还可以规避中国大陆访问 Notion 接口不稳定的问题。\nGithub Action 官方文档 配置文件 如果没有特殊需求，使用 Notion-Site 默认模板默认的配置文件可以满足大部分的需求：\n计费标准 Github Action 是否收费的规则比较透明，下面是计费规则：\n关于 Github Action 的计费 如果你的仓库是公开的就免费，如果有隐私方面的顾虑，私有仓库也可以提供下面的免费额度。\n产品 存储 分钟数（每月） GitHub Free 500 MB 2,000 GitHub Pro 1GB 3,000 组织的 GitHub Free 500 MB 2,000 GitHub Team 2 GB 3,000 GitHub Enterprise Cloud 50 GB 50,000 即使你不是 Github 的付费用户，每天也有近一个小时的容器使用时间（这里默认指的是 Ubuntu 容器） 每次部署的时间 每次部署的时间与文章的数量，文章内媒体资源的大小正相关，可以在 action 页面的历史看到每次部署花费了多少服务器时间：\n当然如果是 public 仓库就不用担心时间的问题。\n个性化配置 模板中默认使用的配置是每天部署一次，这意味着每天 Notion-Site 会基于 Github 提供的服务器拉取在 Notion 中维护的所有文章自动进行部署。\n具体调整配置可以参考 Github Action 文档，比如如果想调整为：\n每小时一次：\n可以直接调整 cron 属性的值。\n如果想改为每次手动触发部署：\n","link":"https://ns-doc.env.wtf/docs/introduce/introduce-github-action/","section":"docs","title":"Github Action"},{"body":"创建 Integration 先为当前 Notion 账号设置 Secret\nNotion – The all-in-one workspace for your notes, tasks, wikis, and databases. A new tool that blends your everyday work apps into one. It\u0026#39;s the all-in-one workspace for you and your team https://www.notion.so/my-integrations 然后勾选 Internal integration, 并勾选三个权限：\nread\nupdate\ninsert （可选）\n\u0026lt;\u0026lt; tip \u0026gt;\u0026gt;\nread 权限是为了读取 Page 信息，update 权限是为了自动更新 Page 属性，insert 权限可以为了以后 Notion-Site 的新功能做准备。\n\u0026lt;\u0026lt; /tip \u0026gt;\u0026gt;\n保存 Token 进入 Step-1 创建的 integration，拿到 token，该 token 的生效范围是该账号的 workspace，不同的 workspace 需要不同的 Integration\n复制模板 博客类 Notion 模板：BLOG\n文档类 Notion 模板：Notiton Site Doc\n选择类型后，点击复制，选择复制到自己的 workspace 即可。\n","link":"https://ns-doc.env.wtf/docs/start/setting-notion/","section":"docs","title":"Setting Notion"},{"body":"我们在 Github Action 中找到 Notion-Site ， 就可以在 Github 中随意使用了，代码如下：\n1- name: notion-site 2 uses: pkwenda/notion-site@v1.0.3 为了节省大家的时间，已经创建好了一套默认流程，可以直接使用：\nhttps://github.com/pkwenda/notion-hugo-website-builder\n直接点击：use the template 创建自己的仓库即可，默认实现流程如下：\nBuild software better, together GitHub is where people build software. More than 94 million people use GitHub to discover, fork, and contribute to over 330 million projects. https://github.com/pkwenda/notion-hugo-website-builder/blob/main/.github/workflows/builder.yml 创建 ubuntu 容器\n设置每天执行一次\n拉取本仓库代码（并递归下载 sub model 主题）\n清空上次拉取的 Page\n从 Notion 拉取最新的 Page\n提交保存最新的 Page \u0026gt;\u0026gt; markdown 到本仓库做备份\n拉取 hugo docker，并编译为网站要素，提交到 XXX 分支\n以上所有的配置用户可以根据自己的需求自行调整，参考文档：\nGitHub Actions Documentation - GitHub Docs Automate, customize, and execute your software development workflows right in your repository with GitHub Actions. You can discover, create, and share actions to perform any job you\u0026#39;d like, including CI/CD, and combine actions in a completely customized workflow. https://docs.github.com/en/actions 至此，我们已经拥有了一个每天不断从 Notion 更新的静态网站仓库，我们可以在手机、平板、电脑等任何设备和平台对网站进行编辑和管理。 下一步只需要考虑部署到服务器即可，Notion-Site 默认提供 Vercel 部署方案，至于其他发布平台或部署到自己服务器的 Nginx ，需要根据自己的情况定制化调整配置文件，Github Action 已经有很多成熟的组件：\nNettxxx\nSFTP\nFTP\nAWS\n等等通用的 Upload 方式，只需要根据自己的实际情况调整即可。\n","link":"https://ns-doc.env.wtf/docs/start/use-github-action/","section":"docs","title":"Use Github Action"},{"body":"在实际生成网站之前我们也可以在本地进行 debug 测试，测试生成的网站是否正确。\n下载或安装 Notion-Site 离线程序 1： 在 release 下载页 选择当前操作系统最新的 release 二进制包。\n2： 基于 Unix 平台 可以在线安装：\n1curl -sSf https://raw.githubusercontent.com/pkwenda/notion-site/master/install.sh | sh 生成配置文件： 在 windows 中：\n1notion-site.exe init 在 Unix 系统中：\n1notion-site init 生成如下文件：\nnotion-site.yaml\n1notion: 2 databaseId: YOUR-NOTION-DATABASE-ID 3 filterProp: Status 4 filterValue: 5 - Finished 6 - Published 7 publishedValue: Published 8markdown: 9 homePath: \u0026#34;\u0026#34; 我们需要更改：\nhomePath: 为执行命令时 hugo 目录的相对路径\ndatabaseId 换为 复制模板后自己 workspace 页面的 page id：\n.env\n1NOTION_SECRET=xxxx Notion_SECRET 填写之前我们创建的 Integration 的 Token 下载 Hugo 模板 参考之前文档：xxxxxxxxxxx，我们还以 xx 为例，下载到\ngit submodule addhttps://github.com/onweru/composethemes/compose\ngit submodule addhttps://github.com/pkwenda/notion-site-theme themes/notion-site-theme\n","link":"https://ns-doc.env.wtf/docs/start/notion-site-config/","section":"docs","title":"Notion-Site Config"},{"body":"在实际生成网站之前我们也可以在本地进行 debug 测试，测试生成的网站是否正确。\n下载或安装 Notion-Site 离线程序 1： 在 release 下载页 选择当前操作系统最新的 release 二进制包。\n2： 基于 Unix 平台 可以在线安装：\n1curl -sSf https://raw.githubusercontent.com/pkwenda/notion-site/master/install.sh | sh 生成配置文件： 在 windows 中：\n1notion-site.exe init 在 Unix 系统中：\n1notion-site init 生成如下文件：\nnotion-site.yaml\n1notion: 2 databaseId: YOUR-NOTION-DATABASE-ID 3 filterProp: Status 4 filterValue: 5 - Finished 6 - Published 7 publishedValue: Published 8markdown: 9 homePath: \u0026#34;\u0026#34; 我们需要更改：\nhomePath: 为执行命令时 hugo 目录的相对路径\ndatabaseId 换为 复制模板后自己 workspace 页面的 page id：\n.env\n1NOTION_SECRET=xxxx Notion_SECRET 填写之前我们创建的 Integration 的 Token 下载 Hugo 模板 参考之前文档：xxxxxxxxxxx，我们还以 xx 为例，下载到本地，将\n","link":"https://ns-doc.env.wtf/post/debug-local/","section":"post","title":"Debug Local"},{"body":"Notion 因为自带分享链接，所以近几年我们通常直接分享 Notion 的地址作为我们的博客、文档站，或者使用类似 Notion-Blog 等开源方案做 1:1 的转换。\n也可以在 Cloudflare Web Worker 提供的能力绑定域名、CDN 提速等等：\nusing-the-notion-page-as-a-personal-website-with-your-domain-on-cloudflare 博客示例 ：https://zhuangwenda.notion.site/73909416ef114124adb89f9c56275561\nNotion 制作的博客方便编辑，但是相比传统博客始终有几点问题无法解决： 没有 RSS 订阅\n加载的 notion 资源太多，打开文章较慢\n中国大陆访问速度慢\n文章链接太长，如想缩短需要针对每个文章使用 Cloudflare Web Worker 做映射\n缺失很多博客的要素：时间轴、分类、标签，更像是笔记\n只有 Notion 的风格，主题样式太单一，无法定制化\n当然，如果能接受上面的缺点，Notion Blog 是最方便的选择。\n如果使用传统博客的方式，也同样有不足： Hugo 类的平台很多 shortcodes需要记忆语法，手动转义，在 MD 编辑器中不伦不类\n需要自己实现备份\nWordPress Nginx 等方式需要购买资源或主题\n每次部署需要手动触发，需要维护一些命令或脚本\nHugo 很难用任何设备（手机，平板）维护网站文章\n在希望实现上面的需求的同时，保留 Notion 的便利性，与 Hugo 平台深度绑定，开发了 Notion-Site。\n流程图 graph TD A[Notion DataBase] --\u003e|Notion-Site| B(Get Pages) B --\u003e C{Process Pages To Hugo} C --\u003e|setting| D[Hugo Setting Files] C --\u003e|Article| E[Hugo Content Files] E --\u003e|Folder| G[Folder] E --\u003e|Article| H[Markdown files] E --\u003e|Media| I[Downlaod Meida files] graph TD Hugo --\u003e|CI| J[GitHub ACtion] --\u003e Vercel --\u003e DPD[Complete the deployment] 我们要做的只是在 Notion 中编辑文章即可。 只需要一次配置，可以实现：\n备份交给 Notion 、 Github Repository\n自动化交给 ： Github Action\n自动部署交给：Vercel\n","link":"https://ns-doc.env.wtf/docs/","section":"docs","title":"Notion Site Doc"},{"body":"","link":"https://ns-doc.env.wtf/post/","section":"post","title":"Posts"},{"body":" 让你的 Notion 与网页联动起来 Notion Site 是基于 Notion 和 Hugo 深度绑定的一款定制化网站的开源软件，您可以在 Hugo 模板商店的数百个模板中找到喜欢的模板作为您的博客或文档站。\n通过 Vercel 与 Github Action 的能力，只需要一次配置，随时随地使用任何设备进行编辑。 如果您是开发者，欢迎提供宝贵的 PR 或 ISSUE 。 Read the Docs\nDownload Notion-Site\n","link":"https://ns-doc.env.wtf/","section":"","title":"Notion-Site"}]